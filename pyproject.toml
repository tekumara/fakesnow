[project]
name = "fakesnow"
description = "Fake Snowflake Connector for Python. Run Snowflake DB locally."
version = "0.5.0"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = ["License :: OSI Approved :: MIT License"]
keywords = ["snowflake", "snowflakedb", "fake", "local", "mock", "testing"]
requires-python = ">=3.9"
dependencies = [
    "duckdb~=0.8.0",
    "pyarrow",
    "snowflake-connector-python",
    "sqlglot~=16.8.1",
]

[project.urls]
homepage = "https://github.com/tekumara/fakesnow"

[project.optional-dependencies]
dev = [
    "black~=23.3",
    "build~=0.10",
    # include compatible version of pandas, and secure-local-storage for token caching
    "snowflake-connector-python[pandas, secure-local-storage]",
    "pre-commit~=3.2",
    "pytest~=7.3",
    "ruff~=0.0.263",
    "twine~=4.0",
]
# for debugging, see https://duckdb.org/docs/guides/python/jupyter.html
notebook = ["duckdb-engine", "ipykernel", "jupysql", "snowflake-sqlalchemy"]

[build-system]
requires = ["setuptools~=67.6", "wheel~=0.40"]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*"]

# use PyCharm default line length of 120
[tool.black]
line-length = 120

[tool.docformatter]
pre-summary-newline = true
recursive = true
wrap-descriptions = 120
wrap-summaries = 120

[tool.ruff]
line-length = 120

# rules to enable/ignore
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # type annotations
    "ANN",
    # pep8-naming
    "N",
    # bugbear
    "B",
    # isort
    "I",
    # flake8-unused-arguments - disabled because our fakes don't use all arguments
    # "ARG",
    # flake8-self
    "SLF",
    # ruff-specific
    "RUF",
]
ignore = [
    # allow untyped self and cls args, and no return type from dunder methods
    "ANN101",
    "ANN102",
    "ANN204",
    # allow == True because pandas dataframes overload equality
    "E712",
    # only relevant for python >= 3.10
    "B905",
]
# first-party imports for sorting
src = ["."]
fix = true
show-fixes = true

[tool.ruff.per-file-ignores]
# test functions don't need return types
"tests/*" = ["ANN201", "ANN202"]

[tool.ruff.flake8-annotations]
# allow *args: Any, **kwargs: Any
allow-star-arg-any = true
